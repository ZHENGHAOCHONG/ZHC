package com.example.simplenewsystem;import android.app.Activity;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.text.TextUtils;import android.view.View;import android.widget.Button;                           //widget：小部件、小工具、微件、挂件import android.widget.EditText;import android.widget.Toast;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;/** * Created by Administrator on 2018-11-09. * 注册处理类 *///类继承了AppCompatActivity会显示标题栏。如果直接继承的是Activity不会出现标题栏public class regsiter extends AppCompatActivity {    EditText edt1;      //用户名编辑    EditText edt2;		//密码编辑    Button bn1;			//确定按钮    //用户名，密码，再次输入的密码的控件的获取值    String userName,psw;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.rgsiterlayout);        init();    }    private void init(){        bn1 = findViewById(R.id.btnregs);        edt1 = findViewById(R.id.editregstnamne);        edt2 = findViewById(R.id.editregstpass);        bn1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                //获取输入在相应控件中的字符串                getEditString();                // public User(String name, String passwd)                User p = new User(edt1.getText().toString(), edt2.getText().toString());                //判断输入框内容                if(TextUtils.isEmpty(userName)){                    //Toast.makeText(getApplicationContext(), "请输入用户名", Toast.LENGTH_SHORT).show();//弃用					UIUtils.showToast( getApplicationContext(), "请输入用户名" );                }else if(TextUtils.isEmpty(psw)) {                    //Toast.makeText(getApplicationContext(), "请输入密码", Toast.LENGTH_SHORT).show();//弃用					UIUtils.showToast( getApplicationContext(), "请输入密码" );                }else if(isExistUserName(userName)){                    Toast.makeText(getApplicationContext(), "此账户名已经存在", Toast.LENGTH_SHORT).show();//弃用                    //UIUtils.showToast( getApplicationContext(), "此账户名已经存在" );                }else {                    //Toast.makeText(getApplicationContext(), "注册成功", Toast.LENGTH_SHORT).show();//弃用					UIUtils.showToast( getApplicationContext(), "注册成功" );                    //把账号、密码和账号标识保存到sp里面                    /**                     * 保存账号和密码到SharedPreferences中                     */                    saveRegisterInfo(userName, psw);                }                //创建一个Bundle对象,把注册填写的数据放入Bunndle中                Bundle data = new Bundle();                data.putSerializable("user",p);                //创建一个Intent,携带Bunndle,将User对象传入第一个Activity                Intent intent = new Intent(regsiter.this,MainActivity.class);                intent.putExtras(data);                startActivity(intent);            }        });    }    /**     * 获取控件中的字符串     */    private void getEditString(){        userName =edt1.getText().toString().trim();        psw      =edt2.getText().toString().trim();    }    /**     * 从SharedPreferences中读取输入的用户名，判断SharedPreferences中是否有此用户名     */    private boolean isExistUserName(String userName){        boolean has_userName=false;        //mode_private SharedPreferences sp = getSharedPreferences( );        // "loginInfo", MODE_PRIVATE        SharedPreferences sp=getSharedPreferences("loginInfo", MODE_PRIVATE);        //获取密码        String spPsw=sp.getString(userName, "");//传入用户名获取密码        //如果密码不为空则确实保存过这个用户名        //TextUtils类是系统自带的一个工具类        //是否为空字符 TextUtils.isEmpty(CharSequence str)        if(!TextUtils.isEmpty(spPsw)) {            has_userName=true;        }        return has_userName;    }    /**     * 保存账号和密码到SharedPreferences中SharedPreferences     */    public void saveRegisterInfo(String name,String pwd){        //loginInfo表示文件名, mode_private SharedPreferences sp = getSharedPreferences( );        SharedPreferences sp = getSharedPreferences("loginInfo",MODE_PRIVATE);        //获取编辑器        SharedPreferences.Editor editor = sp.edit();        //以用户名为key，密码为value保存在SharedPreferences中        //key,value,如键值对，editor.putString(用户名，密码）;        editor.putString(name,pwd);        //提交修改 editor.commit();        editor.apply();    }}